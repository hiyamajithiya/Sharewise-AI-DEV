# Generated by Django 5.2.5 on 2025-08-08 19:24

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TradingSignal',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True, help_text='Time of signal generation')),
                ('symbol', models.CharField(help_text='Stock or instrument name (e.g., NIFTY, RELIANCE)', max_length=50)),
                ('strategy_name', models.CharField(help_text='Strategy that generated the signal', max_length=100)),
                ('signal_type', models.CharField(choices=[('BUY', 'Buy'), ('SELL', 'Sell'), ('SHORT', 'Short'), ('COVER', 'Cover')], help_text='Buy/Sell/Short/Cover', max_length=10)),
                ('confidence_score', models.DecimalField(decimal_places=2, help_text='Probability/Confidence of signal (0-1)', max_digits=3, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('1.00'))])),
                ('entry_price', models.DecimalField(decimal_places=2, help_text='Recommended entry price', max_digits=12)),
                ('target_price', models.DecimalField(blank=True, decimal_places=2, help_text='Target price for exit', max_digits=12, null=True)),
                ('stop_loss', models.DecimalField(blank=True, decimal_places=2, help_text='Stop loss for risk management', max_digits=12, null=True)),
                ('valid_until', models.DateTimeField(blank=True, help_text='Signal expiration time', null=True)),
                ('backtest_result', models.JSONField(default=dict, help_text='Backtest metrics like win-rate, avg return')),
                ('executed', models.BooleanField(default=False, help_text='Whether the trade was executed or not')),
                ('executed_price', models.DecimalField(blank=True, decimal_places=2, help_text='Price at which trade was executed (if any)', max_digits=12, null=True)),
                ('created_by_strategy_id', models.UUIDField(blank=True, help_text='References to strategy that generated this', null=True)),
                ('market_data', models.JSONField(default=dict, help_text='Technical indicators, news sentiment')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trading_signals', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Trading Signal',
                'verbose_name_plural': 'Trading Signals',
                'db_table': 'trading_signal',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='TradingOrder',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('broker_order_id', models.CharField(blank=True, max_length=100, null=True)),
                ('symbol', models.CharField(max_length=50)),
                ('order_type', models.CharField(choices=[('MARKET', 'Market Order'), ('LIMIT', 'Limit Order'), ('SL', 'Stop Loss'), ('SL_M', 'Stop Loss Market')], max_length=20)),
                ('transaction_type', models.CharField(choices=[('BUY', 'Buy'), ('SELL', 'Sell')], max_length=10)),
                ('quantity', models.PositiveIntegerField()),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('trigger_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('OPEN', 'Open'), ('COMPLETE', 'Complete'), ('CANCELLED', 'Cancelled'), ('REJECTED', 'Rejected')], default='PENDING', max_length=20)),
                ('filled_quantity', models.PositiveIntegerField(default=0)),
                ('average_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('order_timestamp', models.DateTimeField(auto_now_add=True)),
                ('exchange_timestamp', models.DateTimeField(blank=True, null=True)),
                ('rejection_reason', models.TextField(blank=True, null=True)),
                ('fees', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('taxes', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trading_orders', to=settings.AUTH_USER_MODEL)),
                ('signal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to='trading.tradingsignal')),
            ],
            options={
                'verbose_name': 'Trading Order',
                'verbose_name_plural': 'Trading Orders',
                'db_table': 'trading_order',
                'ordering': ['-order_timestamp'],
            },
        ),
        migrations.AddIndex(
            model_name='tradingsignal',
            index=models.Index(fields=['user', '-timestamp'], name='trading_sig_user_id_d4f71e_idx'),
        ),
        migrations.AddIndex(
            model_name='tradingsignal',
            index=models.Index(fields=['symbol', '-timestamp'], name='trading_sig_symbol_125da3_idx'),
        ),
        migrations.AddIndex(
            model_name='tradingsignal',
            index=models.Index(fields=['executed', 'valid_until'], name='trading_sig_execute_16c516_idx'),
        ),
        migrations.AddIndex(
            model_name='tradingorder',
            index=models.Index(fields=['user', '-order_timestamp'], name='trading_ord_user_id_7dabb6_idx'),
        ),
        migrations.AddIndex(
            model_name='tradingorder',
            index=models.Index(fields=['status'], name='trading_ord_status_a4f93e_idx'),
        ),
        migrations.AddIndex(
            model_name='tradingorder',
            index=models.Index(fields=['symbol'], name='trading_ord_symbol_036335_idx'),
        ),
    ]
