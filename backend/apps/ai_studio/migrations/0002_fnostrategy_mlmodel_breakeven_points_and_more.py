# Generated by Django 5.2.5 on 2025-08-11 08:18

import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('ai_studio', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='FnOStrategy',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('strategy_type', models.CharField(choices=[('LONG_CALL', 'Long Call'), ('LONG_PUT', 'Long Put'), ('COVERED_CALL', 'Covered Call'), ('PROTECTIVE_PUT', 'Protective Put'), ('BULL_CALL_SPREAD', 'Bull Call Spread'), ('BEAR_PUT_SPREAD', 'Bear Put Spread'), ('IRON_CONDOR', 'Iron Condor'), ('BUTTERFLY_SPREAD', 'Butterfly Spread'), ('STRADDLE', 'Long Straddle'), ('STRANGLE', 'Long Strangle'), ('CALENDAR_SPREAD', 'Calendar Spread'), ('FUTURES_ARBITRAGE', 'Futures Arbitrage'), ('VOLATILITY_TRADING', 'Volatility Trading')], max_length=50)),
                ('description', models.TextField()),
                ('instruments_required', models.JSONField(default=list, help_text='Required instruments (CALL, PUT, FUTURE)')),
                ('risk_level', models.CharField(choices=[('LOW', 'Low Risk'), ('MEDIUM', 'Medium Risk'), ('HIGH', 'High Risk'), ('VERY_HIGH', 'Very High Risk')], default='MEDIUM', max_length=20)),
                ('minimum_capital', models.DecimalField(decimal_places=2, max_digits=12)),
                ('maximum_loss', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('maximum_profit', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('best_market_condition', models.CharField(help_text='Bullish, Bearish, Neutral, High Volatility, etc.', max_length=100)),
                ('volatility_requirement', models.CharField(help_text='Low, Medium, High volatility', max_length=50)),
                ('delta_target_range', models.JSONField(default=dict, help_text='Target delta range')),
                ('gamma_consideration', models.BooleanField(default=False)),
                ('theta_strategy', models.BooleanField(default=False, help_text='Time decay strategy')),
                ('vega_consideration', models.BooleanField(default=False, help_text='Volatility sensitive')),
                ('entry_conditions', models.JSONField(default=list)),
                ('exit_conditions', models.JSONField(default=list)),
                ('stop_loss_rules', models.JSONField(default=list)),
                ('is_template', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('usage_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'F&O Strategy',
                'verbose_name_plural': 'F&O Strategies',
                'db_table': 'ai_studio_fnostrategy',
                'ordering': ['strategy_type', 'name'],
            },
        ),
        migrations.AddField(
            model_name='mlmodel',
            name='breakeven_points',
            field=models.JSONField(default=list, help_text='Breakeven price points'),
        ),
        migrations.AddField(
            model_name='mlmodel',
            name='delta_neutral_success',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='mlmodel',
            name='delta_prediction_accuracy',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='mlmodel',
            name='expiry_handling',
            field=models.CharField(blank=True, help_text='Expiry handling method', max_length=50),
        ),
        migrations.AddField(
            model_name='mlmodel',
            name='gamma_prediction_accuracy',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='mlmodel',
            name='implied_volatility_accuracy',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='mlmodel',
            name='instrument_types',
            field=models.JSONField(default=list, help_text='Supported F&O instruments (OPTIONS, FUTURES)'),
        ),
        migrations.AddField(
            model_name='mlmodel',
            name='max_loss_potential',
            field=models.FloatField(blank=True, help_text='Maximum loss potential', null=True),
        ),
        migrations.AddField(
            model_name='mlmodel',
            name='max_profit_potential',
            field=models.FloatField(blank=True, help_text='Maximum profit potential', null=True),
        ),
        migrations.AddField(
            model_name='mlmodel',
            name='option_strategies',
            field=models.JSONField(default=list, help_text='Supported options strategies'),
        ),
        migrations.AddField(
            model_name='mlmodel',
            name='theta_prediction_accuracy',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='mlmodel',
            name='underlying_assets',
            field=models.JSONField(default=list, help_text='Underlying assets for F&O trading'),
        ),
        migrations.AddField(
            model_name='mlmodel',
            name='vega_prediction_accuracy',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='mlmodel',
            name='model_type',
            field=models.CharField(choices=[('CLASSIFICATION', 'Classification'), ('REGRESSION', 'Regression'), ('ENSEMBLE', 'Ensemble'), ('NEURAL_NETWORK', 'Neural Network'), ('RULE_BASED', 'Rule Based'), ('OPTIONS_STRATEGY', 'Options Strategy'), ('FUTURES_MOMENTUM', 'Futures Momentum'), ('VOLATILITY_TRADING', 'Volatility Trading'), ('ARBITRAGE', 'Arbitrage')], default='CLASSIFICATION', max_length=50),
        ),
    ]
