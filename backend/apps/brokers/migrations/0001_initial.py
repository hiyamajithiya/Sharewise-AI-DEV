# Generated by Django 5.2.5 on 2025-09-17 12:14

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("trading", "0005_add_usage_tracker"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="BrokerAccount",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "broker_type",
                    models.CharField(
                        choices=[
                            ("ZERODHA", "Zerodha"),
                            ("UPSTOX", "Upstox"),
                            ("ALICE_BLUE", "Alice Blue"),
                            ("ANGEL_ONE", "Angel One"),
                            ("IIFL", "IIFL"),
                            ("KOTAK", "Kotak Securities"),
                            ("HDFC", "HDFC Securities"),
                            ("ICICI", "ICICI Direct"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "account_name",
                    models.CharField(
                        help_text="User-defined name for this account", max_length=100
                    ),
                ),
                (
                    "broker_user_id",
                    models.CharField(help_text="Broker's user ID", max_length=100),
                ),
                (
                    "encrypted_credentials",
                    models.TextField(help_text="Encrypted API credentials"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("CONNECTING", "Connecting"),
                            ("ACTIVE", "Active"),
                            ("INACTIVE", "Inactive"),
                            ("ERROR", "Error"),
                            ("EXPIRED", "Expired"),
                        ],
                        default="CONNECTING",
                        max_length=20,
                    ),
                ),
                ("last_connected_at", models.DateTimeField(blank=True, null=True)),
                ("last_error", models.TextField(blank=True, null=True)),
                (
                    "account_balance",
                    models.DecimalField(decimal_places=2, default=0, max_digits=15),
                ),
                (
                    "available_balance",
                    models.DecimalField(decimal_places=2, default=0, max_digits=15),
                ),
                (
                    "margin_used",
                    models.DecimalField(decimal_places=2, default=0, max_digits=15),
                ),
                (
                    "is_primary",
                    models.BooleanField(
                        default=False, help_text="Primary account for trading"
                    ),
                ),
                (
                    "auto_sync",
                    models.BooleanField(
                        default=True, help_text="Auto sync positions and orders"
                    ),
                ),
                ("risk_limit_enabled", models.BooleanField(default=True)),
                (
                    "daily_loss_limit",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "position_size_limit",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="broker_accounts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Broker Account",
                "verbose_name_plural": "Broker Accounts",
                "db_table": "broker_accounts",
                "unique_together": {("user", "broker_type", "broker_user_id")},
            },
        ),
        migrations.CreateModel(
            name="BrokerOrder",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "broker_order_id",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "platform_order_id",
                    models.CharField(help_text="Our internal order ID", max_length=100),
                ),
                ("symbol", models.CharField(max_length=50)),
                ("exchange", models.CharField(default="NSE", max_length=10)),
                ("order_type", models.CharField(max_length=20)),
                ("transaction_type", models.CharField(max_length=10)),
                ("quantity", models.PositiveIntegerField()),
                (
                    "price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "trigger_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("PLACED", "Placed"),
                            ("COMPLETE", "Complete"),
                            ("CANCELLED", "Cancelled"),
                            ("REJECTED", "Rejected"),
                            ("MODIFIED", "Modified"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                ("filled_quantity", models.PositiveIntegerField(default=0)),
                (
                    "average_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("placed_at", models.DateTimeField(blank=True, null=True)),
                ("executed_at", models.DateTimeField(blank=True, null=True)),
                ("cancelled_at", models.DateTimeField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True, null=True)),
                ("retry_count", models.PositiveSmallIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "broker_account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="orders",
                        to="brokers.brokeraccount",
                    ),
                ),
                (
                    "trading_order",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="trading.tradingorder",
                    ),
                ),
            ],
            options={
                "verbose_name": "Broker Order",
                "verbose_name_plural": "Broker Orders",
                "db_table": "broker_orders",
            },
        ),
        migrations.CreateModel(
            name="BrokerSession",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "session_token",
                    models.TextField(help_text="Encrypted session token"),
                ),
                ("access_token", models.TextField(blank=True, null=True)),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "broker_account",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="session",
                        to="brokers.brokeraccount",
                    ),
                ),
            ],
            options={
                "db_table": "broker_sessions",
            },
        ),
        migrations.CreateModel(
            name="BrokerWebhook",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("ORDER_UPDATE", "Order Update"),
                            ("POSITION_UPDATE", "Position Update"),
                            ("BALANCE_UPDATE", "Balance Update"),
                            ("CONNECTION_STATUS", "Connection Status"),
                        ],
                        max_length=30,
                    ),
                ),
                ("event_data", models.JSONField()),
                ("processed", models.BooleanField(default=False)),
                ("processed_at", models.DateTimeField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "broker_account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="webhooks",
                        to="brokers.brokeraccount",
                    ),
                ),
            ],
            options={
                "db_table": "broker_webhooks",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="BrokerAPILog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("endpoint", models.CharField(max_length=200)),
                ("method", models.CharField(max_length=10)),
                ("request_data", models.JSONField(blank=True, null=True)),
                ("response_data", models.JSONField(blank=True, null=True)),
                (
                    "status_code",
                    models.PositiveSmallIntegerField(blank=True, null=True),
                ),
                (
                    "response_time_ms",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "level",
                    models.CharField(
                        choices=[
                            ("INFO", "Info"),
                            ("WARNING", "Warning"),
                            ("ERROR", "Error"),
                            ("DEBUG", "Debug"),
                        ],
                        default="INFO",
                        max_length=10,
                    ),
                ),
                ("message", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "broker_account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="api_logs",
                        to="brokers.brokeraccount",
                    ),
                ),
            ],
            options={
                "db_table": "broker_api_logs",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["broker_account", "-created_at"],
                        name="broker_api__broker__a2216f_idx",
                    ),
                    models.Index(
                        fields=["level", "-created_at"],
                        name="broker_api__level_0fc538_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="BrokerPosition",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("symbol", models.CharField(max_length=50)),
                ("exchange", models.CharField(default="NSE", max_length=10)),
                ("product", models.CharField(max_length=10)),
                (
                    "quantity",
                    models.IntegerField(
                        help_text="Net quantity (positive for long, negative for short)"
                    ),
                ),
                ("average_price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("last_price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "unrealized_pnl",
                    models.DecimalField(decimal_places=2, max_digits=12),
                ),
                (
                    "realized_pnl",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_synced_at", models.DateTimeField(auto_now=True)),
                (
                    "broker_account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="positions",
                        to="brokers.brokeraccount",
                    ),
                ),
            ],
            options={
                "verbose_name": "Broker Position",
                "verbose_name_plural": "Broker Positions",
                "db_table": "broker_positions",
                "unique_together": {
                    ("broker_account", "symbol", "exchange", "product")
                },
            },
        ),
    ]
