# Generated by Django 5.1.5 on 2025-08-17 12:43

import django.core.serializers.json
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AuditConfiguration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('event_type', models.CharField(choices=[('USER_LOGIN', 'User Login'), ('USER_LOGOUT', 'User Logout'), ('USER_REGISTRATION', 'User Registration'), ('PASSWORD_CHANGE', 'Password Change'), ('PERMISSION_DENIED', 'Permission Denied'), ('SIGNAL_GENERATED', 'Trading Signal Generated'), ('SIGNAL_EXECUTED', 'Trading Signal Executed'), ('TRADE_PLACED', 'Trade Order Placed'), ('TRADE_EXECUTED', 'Trade Executed'), ('TRADE_CANCELLED', 'Trade Cancelled'), ('PORTFOLIO_UPDATED', 'Portfolio Updated'), ('RISK_ALERT', 'Risk Alert Generated'), ('MODEL_CREATED', 'ML Model Created'), ('MODEL_TRAINED', 'ML Model Training Started'), ('MODEL_COMPLETED', 'ML Model Training Completed'), ('MODEL_PUBLISHED', 'ML Model Published'), ('MODEL_LEASED', 'ML Model Leased'), ('MODEL_PREDICTION', 'ML Model Prediction Made'), ('BACKTEST_STARTED', 'Backtest Started'), ('BACKTEST_COMPLETED', 'Backtest Completed'), ('DATA_ACCESSED', 'Data Accessed'), ('DATA_EXPORTED', 'Data Exported'), ('DATA_IMPORTED', 'Data Imported'), ('REPORT_GENERATED', 'Report Generated'), ('SETTINGS_CHANGED', 'System Settings Changed'), ('USER_CREATED', 'User Account Created'), ('USER_UPDATED', 'User Account Updated'), ('USER_DELETED', 'User Account Deleted'), ('SUBSCRIPTION_CHANGED', 'Subscription Changed'), ('SECURITY_VIOLATION', 'Security Violation'), ('SUSPICIOUS_ACTIVITY', 'Suspicious Activity'), ('RATE_LIMIT_EXCEEDED', 'Rate Limit Exceeded'), ('UNAUTHORIZED_ACCESS', 'Unauthorized Access Attempt'), ('PAYMENT_PROCESSED', 'Payment Processed'), ('REFUND_ISSUED', 'Refund Issued'), ('COMPLIANCE_CHECK', 'Compliance Check'), ('REGULATORY_REPORT', 'Regulatory Report Generated')], max_length=50)),
                ('enabled', models.BooleanField(default=True)),
                ('log_level', models.CharField(choices=[('MINIMAL', 'Minimal'), ('STANDARD', 'Standard'), ('DETAILED', 'Detailed'), ('COMPREHENSIVE', 'Comprehensive')], default='STANDARD', max_length=20)),
                ('retention_days', models.PositiveIntegerField(default=365)),
                ('archive_after_days', models.PositiveIntegerField(default=90)),
                ('alert_on_failure', models.BooleanField(default=False)),
                ('alert_threshold', models.PositiveIntegerField(blank=True, null=True)),
                ('required_for_compliance', models.BooleanField(default=False)),
                ('regulatory_framework', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'audit_configuration',
                'unique_together': {('event_type',)},
            },
        ),
        migrations.CreateModel(
            name='AuditEvent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('event_type', models.CharField(choices=[('USER_LOGIN', 'User Login'), ('USER_LOGOUT', 'User Logout'), ('USER_REGISTRATION', 'User Registration'), ('PASSWORD_CHANGE', 'Password Change'), ('PERMISSION_DENIED', 'Permission Denied'), ('SIGNAL_GENERATED', 'Trading Signal Generated'), ('SIGNAL_EXECUTED', 'Trading Signal Executed'), ('TRADE_PLACED', 'Trade Order Placed'), ('TRADE_EXECUTED', 'Trade Executed'), ('TRADE_CANCELLED', 'Trade Cancelled'), ('PORTFOLIO_UPDATED', 'Portfolio Updated'), ('RISK_ALERT', 'Risk Alert Generated'), ('MODEL_CREATED', 'ML Model Created'), ('MODEL_TRAINED', 'ML Model Training Started'), ('MODEL_COMPLETED', 'ML Model Training Completed'), ('MODEL_PUBLISHED', 'ML Model Published'), ('MODEL_LEASED', 'ML Model Leased'), ('MODEL_PREDICTION', 'ML Model Prediction Made'), ('BACKTEST_STARTED', 'Backtest Started'), ('BACKTEST_COMPLETED', 'Backtest Completed'), ('DATA_ACCESSED', 'Data Accessed'), ('DATA_EXPORTED', 'Data Exported'), ('DATA_IMPORTED', 'Data Imported'), ('REPORT_GENERATED', 'Report Generated'), ('SETTINGS_CHANGED', 'System Settings Changed'), ('USER_CREATED', 'User Account Created'), ('USER_UPDATED', 'User Account Updated'), ('USER_DELETED', 'User Account Deleted'), ('SUBSCRIPTION_CHANGED', 'Subscription Changed'), ('SECURITY_VIOLATION', 'Security Violation'), ('SUSPICIOUS_ACTIVITY', 'Suspicious Activity'), ('RATE_LIMIT_EXCEEDED', 'Rate Limit Exceeded'), ('UNAUTHORIZED_ACCESS', 'Unauthorized Access Attempt'), ('PAYMENT_PROCESSED', 'Payment Processed'), ('REFUND_ISSUED', 'Refund Issued'), ('COMPLIANCE_CHECK', 'Compliance Check'), ('REGULATORY_REPORT', 'Regulatory Report Generated')], max_length=50)),
                ('severity', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('CRITICAL', 'Critical')], default='MEDIUM', max_length=20)),
                ('status', models.CharField(choices=[('SUCCESS', 'Success'), ('FAILURE', 'Failure'), ('WARNING', 'Warning'), ('ERROR', 'Error')], default='SUCCESS', max_length=20)),
                ('session_key', models.CharField(blank=True, max_length=40, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('forwarded_for', models.GenericIPAddressField(blank=True, null=True)),
                ('referer', models.URLField(blank=True, max_length=500)),
                ('description', models.TextField()),
                ('details', models.JSONField(default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('object_id', models.CharField(blank=True, max_length=255)),
                ('request_path', models.CharField(blank=True, max_length=500)),
                ('request_method', models.CharField(blank=True, max_length=10)),
                ('request_data', models.JSONField(default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('response_status', models.IntegerField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('duration_ms', models.PositiveIntegerField(blank=True, help_text='Duration in milliseconds', null=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('currency', models.CharField(default='INR', max_length=3)),
                ('regulatory_category', models.CharField(blank=True, max_length=100)),
                ('compliance_status', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_events', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'audit_events',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='ComplianceReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('report_type', models.CharField(choices=[('GDPR_DATA_ACCESS', 'GDPR Data Access Report'), ('SECURITY_INCIDENT', 'Security Incident Report'), ('FINANCIAL_ACTIVITY', 'Financial Activity Report'), ('USER_ACTIVITY', 'User Activity Report'), ('SYSTEM_USAGE', 'System Usage Report'), ('DATA_EXPORT', 'Data Export Report')], max_length=50)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('period_start', models.DateTimeField()),
                ('period_end', models.DateTimeField()),
                ('summary', models.JSONField(default=dict)),
                ('details', models.JSONField(default=dict)),
                ('file_path', models.CharField(blank=True, max_length=500)),
                ('file_size', models.PositiveIntegerField(blank=True, null=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('GENERATED', 'Generated'), ('SUBMITTED', 'Submitted'), ('ARCHIVED', 'Archived')], default='PENDING', max_length=20)),
                ('regulatory_framework', models.CharField(blank=True, max_length=100)),
                ('submission_deadline', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('generated_at', models.DateTimeField(blank=True, null=True)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('generated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'audit_compliance_reports',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DataAccessLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('access_type', models.CharField(choices=[('READ', 'Read Access'), ('WRITE', 'Write Access'), ('DELETE', 'Delete Access'), ('EXPORT', 'Export Access'), ('IMPORT', 'Import Access')], max_length=20)),
                ('table_name', models.CharField(max_length=100)),
                ('record_count', models.PositiveIntegerField(default=0)),
                ('data_classification', models.CharField(default='PUBLIC', max_length=50)),
                ('query_hash', models.CharField(blank=True, max_length=64)),
                ('filters_applied', models.JSONField(default=dict)),
                ('purpose', models.CharField(max_length=200)),
                ('business_justification', models.TextField(blank=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('session_key', models.CharField(max_length=40)),
                ('timestamp', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('duration_ms', models.PositiveIntegerField(blank=True, null=True)),
                ('gdpr_lawful_basis', models.CharField(blank=True, max_length=100)),
                ('retention_period_days', models.PositiveIntegerField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_accesses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'audit_data_access',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='SecurityEvent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('category', models.CharField(choices=[('AUTHENTICATION', 'Authentication'), ('AUTHORIZATION', 'Authorization'), ('DATA_BREACH', 'Data Breach'), ('MALWARE', 'Malware'), ('INTRUSION', 'Intrusion'), ('SUSPICIOUS_ACTIVITY', 'Suspicious Activity'), ('RATE_LIMITING', 'Rate Limiting'), ('INPUT_VALIDATION', 'Input Validation')], max_length=50)),
                ('threat_level', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('CRITICAL', 'Critical')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('indicators', models.JSONField(default=list)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('attack_vector', models.CharField(blank=True, max_length=100)),
                ('payload', models.TextField(blank=True)),
                ('blocked', models.BooleanField(default=False)),
                ('action_taken', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('audit_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='security_events', to='audit.auditevent')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'audit_security_events',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddIndex(
            model_name='auditevent',
            index=models.Index(fields=['event_type', 'timestamp'], name='audit_event_event_t_5f5939_idx'),
        ),
        migrations.AddIndex(
            model_name='auditevent',
            index=models.Index(fields=['user', 'timestamp'], name='audit_event_user_id_69236c_idx'),
        ),
        migrations.AddIndex(
            model_name='auditevent',
            index=models.Index(fields=['severity', 'timestamp'], name='audit_event_severit_57fc6b_idx'),
        ),
        migrations.AddIndex(
            model_name='auditevent',
            index=models.Index(fields=['ip_address', 'timestamp'], name='audit_event_ip_addr_6b73a0_idx'),
        ),
        migrations.AddIndex(
            model_name='auditevent',
            index=models.Index(fields=['status', 'timestamp'], name='audit_event_status_1a79d2_idx'),
        ),
        migrations.AddIndex(
            model_name='compliancereport',
            index=models.Index(fields=['report_type', 'created_at'], name='audit_compl_report__dd0d3f_idx'),
        ),
        migrations.AddIndex(
            model_name='compliancereport',
            index=models.Index(fields=['status', 'created_at'], name='audit_compl_status_176ab9_idx'),
        ),
        migrations.AddIndex(
            model_name='compliancereport',
            index=models.Index(fields=['period_start', 'period_end'], name='audit_compl_period__5b67fe_idx'),
        ),
        migrations.AddIndex(
            model_name='dataaccesslog',
            index=models.Index(fields=['user', 'timestamp'], name='audit_data__user_id_8d8bbc_idx'),
        ),
        migrations.AddIndex(
            model_name='dataaccesslog',
            index=models.Index(fields=['table_name', 'timestamp'], name='audit_data__table_n_5dd1b1_idx'),
        ),
        migrations.AddIndex(
            model_name='dataaccesslog',
            index=models.Index(fields=['access_type', 'timestamp'], name='audit_data__access__b9229a_idx'),
        ),
        migrations.AddIndex(
            model_name='dataaccesslog',
            index=models.Index(fields=['data_classification', 'timestamp'], name='audit_data__data_cl_f9e612_idx'),
        ),
        migrations.AddIndex(
            model_name='securityevent',
            index=models.Index(fields=['threat_level', 'timestamp'], name='audit_secur_threat__6d5eb5_idx'),
        ),
        migrations.AddIndex(
            model_name='securityevent',
            index=models.Index(fields=['category', 'timestamp'], name='audit_secur_categor_f9e69c_idx'),
        ),
        migrations.AddIndex(
            model_name='securityevent',
            index=models.Index(fields=['ip_address', 'timestamp'], name='audit_secur_ip_addr_ea3b11_idx'),
        ),
    ]
